

Module(
  body=[
    ImportFrom(
      module='ast',
      names=[alias(
        name='parse',
        asname=None)],
      level=0),
    ImportFrom(
      module='os',
      names=[alias(
        name='makedirs',
        asname='mkdir')],
      level=0),
    ImportFrom(
      module='os.path',
      names=[
        alias(
          name='dirname',
          asname=None),
        alias(
          name='exists',
          asname=None),
        alias(
          name='join',
          asname=None)],
      level=0),
    ImportFrom(
      module='sys',
      names=[alias(
        name='argv',
        asname=None)],
      level=0),
    ImportFrom(
      module='astunparse',
      names=[alias(
        name='dump',
        asname=None)],
      level=0),
    ImportFrom(
      module='postprocessor',
      names=[alias(
        name='*',
        asname=None)],
      level=0),
    ImportFrom(
      module='utils',
      names=[
        alias(
          name='log',
          asname=None),
        alias(
          name='setup',
          asname=None)],
      level=0),
    ImportFrom(
      module='utils.options',
      names=[alias(
        name='Options',
        asname=None)],
      level=0),
    ImportFrom(
      module='utils.unparser',
      names=[alias(
        name='Unparser',
        asname=None)],
      level=0),
    ImportFrom(
      module='transpiler',
      names=[alias(
        name='Transpiler',
        asname=None)],
      level=0),
    FunctionDef(
      name='main',
      args=arguments(
        posonlyargs=[],
        args=[],
        vararg=None,
        kwonlyargs=[],
        kw_defaults=[],
        kwarg=None,
        defaults=[]),
      body=[
        Expr(value=Call(
          func=Name(
            id='print',
            ctx=Load()),
          args=[Constant(
            value='New',
            kind=None)],
          keywords=[])),
        With(
          items=[withitem(
            context_expr=Call(
              func=Name(
                id='open',
                ctx=Load()),
              args=[
                Subscript(
                  value=Name(
                    id='argv',
                    ctx=Load()),
                  slice=Index(value=Constant(
                    value=1,
                    kind=None)),
                  ctx=Load()),
                Constant(
                  value='r',
                  kind=None)],
              keywords=[]),
            optional_vars=Name(
              id='f',
              ctx=Store()))],
          body=[Assign(
            targets=[Name(
              id='data',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='f',
                  ctx=Load()),
                attr='read',
                ctx=Load()),
              args=[],
              keywords=[]),
            type_comment=None)],
          type_comment=None),
        Assign(
          targets=[Name(
            id='data',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Transpiler',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='transpile',
              ctx=Load()),
            args=[Name(
              id='data',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Name(
              id='parse',
              ctx=Load()),
            args=[Name(
              id='data',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Generator',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='generate',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Optimizer',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='optimize',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Inliner',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='inline',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Importer',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='clean_imports',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='tree',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='UnusedRemover',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='remove_unused',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='code',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Name(
                id='Unparser',
                ctx=Load()),
              attr='unparse',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Assign(
          targets=[Name(
            id='code',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='Minifier',
                  ctx=Load()),
                args=[],
                keywords=[keyword(
                  arg='options',
                  value=Call(
                    func=Name(
                      id='Options',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='debug',
                        value=Constant(
                          value=True,
                          kind=None)),
                      keyword(
                        arg='imports',
                        value=List(
                          elts=[
                            Starred(
                              value=List(
                                elts=[
                                  Constant(
                                    value='math',
                                    kind=None),
                                  Constant(
                                    value='os.path',
                                    kind=None)],
                                ctx=Load()),
                              ctx=Load()),
                            Constant(
                              value='os',
                              kind=None)],
                          ctx=Load())),
                      keyword(
                        arg='eval_mod',
                        value=List(
                          elts=[
                            Constant(
                              value='math',
                              kind=None),
                            Constant(
                              value='os.path',
                              kind=None)],
                          ctx=Load()))]))]),
              attr='minify',
              ctx=Load()),
            args=[Name(
              id='code',
              ctx=Load())],
            keywords=[]),
          type_comment=None),
        Expr(value=Call(
          func=Name(
            id='log',
            ctx=Load()),
          args=[Call(
            func=Name(
              id='dump',
              ctx=Load()),
            args=[Name(
              id='tree',
              ctx=Load())],
            keywords=[])],
          keywords=[])),
        Expr(value=Call(
          func=Name(
            id='log',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Name(
                id='code',
                ctx=Load()),
              attr='replace',
              ctx=Load()),
            args=[
              Constant(
                value='\n',
                kind=None),
              Constant(
                value='\\n\n',
                kind=None)],
            keywords=[])],
          keywords=[])),
        Assign(
          targets=[Name(
            id='path_parts',
            ctx=Store())],
          value=Call(
            func=Attribute(
              value=Subscript(
                value=Name(
                  id='argv',
                  ctx=Load()),
                slice=Index(value=Constant(
                  value=1,
                  kind=None)),
                ctx=Load()),
              attr='split',
              ctx=Load()),
            args=[Constant(
              value='.',
              kind=None)],
            keywords=[]),
          type_comment=None),
        If(
          test=UnaryOp(
            op=Not(),
            operand=Call(
              func=Name(
                id='exists',
                ctx=Load()),
              args=[Call(
                func=Name(
                  id='dirname',
                  ctx=Load()),
                args=[Call(
                  func=Name(
                    id='join',
                    ctx=Load()),
                  args=[
                    Constant(
                      value='dist',
                      kind=None),
                    BinOp(
                      left=Call(
                        func=Attribute(
                          value=Constant(
                            value='',
                            kind=None),
                          attr='join',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='path_parts',
                            ctx=Load()),
                          slice=Slice(
                            lower=None,
                            upper=UnaryOp(
                              op=USub(),
                              operand=Constant(
                                value=1,
                                kind=None)),
                            step=None),
                          ctx=Load())],
                        keywords=[]),
                      op=Add(),
                      right=Constant(
                        value='.py',
                        kind=None))],
                  keywords=[])],
                keywords=[])],
              keywords=[])),
          body=[Expr(value=Call(
            func=Name(
              id='mkdir',
              ctx=Load()),
            args=[Call(
              func=Name(
                id='dirname',
                ctx=Load()),
              args=[Call(
                func=Name(
                  id='join',
                  ctx=Load()),
                args=[
                  Constant(
                    value='dist',
                    kind=None),
                  BinOp(
                    left=Call(
                      func=Attribute(
                        value=Constant(
                          value='',
                          kind=None),
                        attr='join',
                        ctx=Load()),
                      args=[Subscript(
                        value=Name(
                          id='path_parts',
                          ctx=Load()),
                        slice=Slice(
                          lower=None,
                          upper=UnaryOp(
                            op=USub(),
                            operand=Constant(
                              value=1,
                              kind=None)),
                          step=None),
                        ctx=Load())],
                      keywords=[]),
                    op=Add(),
                    right=Constant(
                      value='.py',
                      kind=None))],
                keywords=[])],
              keywords=[])],
            keywords=[]))],
          orelse=[]),
        With(
          items=[withitem(
            context_expr=Call(
              func=Name(
                id='open',
                ctx=Load()),
              args=[
                Call(
                  func=Name(
                    id='join',
                    ctx=Load()),
                  args=[
                    Constant(
                      value='dist',
                      kind=None),
                    BinOp(
                      left=Call(
                        func=Attribute(
                          value=Constant(
                            value='',
                            kind=None),
                          attr='join',
                          ctx=Load()),
                        args=[Subscript(
                          value=Name(
                            id='path_parts',
                            ctx=Load()),
                          slice=Slice(
                            lower=None,
                            upper=UnaryOp(
                              op=USub(),
                              operand=Constant(
                                value=1,
                                kind=None)),
                            step=None),
                          ctx=Load())],
                        keywords=[]),
                      op=Add(),
                      right=Constant(
                        value='.py',
                        kind=None))],
                  keywords=[]),
                Constant(
                  value='w',
                  kind=None)],
              keywords=[]),
            optional_vars=Name(
              id='f',
              ctx=Store()))],
          body=[Expr(value=Call(
            func=Attribute(
              value=Name(
                id='f',
                ctx=Load()),
              attr='write',
              ctx=Load()),
            args=[Name(
              id='code',
              ctx=Load())],
            keywords=[]))],
          type_comment=None)],
      decorator_list=[],
      returns=None,
      type_comment=None),
    If(
      test=Compare(
        left=Name(
          id='__name__',
          ctx=Load()),
        ops=[Eq()],
        comparators=[Constant(
          value='__main__',
          kind=None)]),
      body=[
        Expr(value=Call(
          func=Name(
            id='setup',
            ctx=Load()),
          args=[],
          keywords=[])),
        Expr(value=Call(
          func=Name(
            id='main',
            ctx=Load()),
          args=[],
          keywords=[]))],
      orelse=[])],
  type_ignores=[])

from ast import parse\n
from os import makedirs as mkdir\n
from os.path import dirname,exists,join\n
from sys import argv\n
from astunparse import dump\n
from postprocessor import *\n
from utils import log,setup\n
from utils.options import Options\n
from utils.unparser import Unparser\n
from transpiler import Transpiler\n
def main():\n
	print('New')\n
	with open(argv[1],'r') as f:\n
		data=f.read()\n
	data=Transpiler(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).transpile(data)\n
	tree=parse(data)\n
	tree=Generator(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).generate(tree)\n
	tree=Optimizer(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).optimize(tree)\n
	tree=Inliner(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).inline(tree)\n
	tree=Importer(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).clean_imports(tree)\n
	tree=UnusedRemover(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).remove_unused(tree)\n
	code=Unparser.unparse(tree)\n
	code=Minifier(options=Options(debug=True,imports=[*['math','os.path'],'os'],eval_mod=['math','os.path'])).minify(code)\n
	log(dump(tree))\n
	log(code.replace('\n','\\n\n'))\n
	path_parts=argv[1].split('.')\n
	if (not exists(dirname(join('dist',(''.join(path_parts[:(-1)])+'.py'))))):\n
		mkdir(dirname(join('dist',(''.join(path_parts[:(-1)])+'.py'))))\n
	with open(join('dist',(''.join(path_parts[:(-1)])+'.py')),'w') as f:\n
		f.write(code)\n
if (__name__=='__main__'):\n
	setup()\n
	main()